{"version":3,"sources":["src/app/modules/music-directory/components/add-dialog/add-dialog.component.html","src/app/modules/music-directory/components/left-side-bar/left-side-bar.component.html","src/app/modules/music-directory/components/music-directory-container/music-directory-container.component.html","src/app/modules/music-directory/components/music-list/music-list.component.html","src/app/modules/music-directory/components/add-dialog/add-dialog.component.styl","src/app/modules/music-directory/components/add-dialog/add-dialog.component.ts","src/app/modules/music-directory/components/left-side-bar/left-side-bar.component.styl","src/app/modules/music-directory/components/left-side-bar/left-side-bar.component.ts","src/app/modules/music-directory/components/music-directory-container/music-directory-container.component.styl","src/app/modules/music-directory/components/music-directory-container/music-directory-container.component.ts","src/app/modules/music-directory/components/music-list/music-list.component.styl","src/app/modules/music-directory/components/music-list/music-list.component.ts","src/app/modules/music-directory/music-directory-routing.module.ts","src/app/modules/music-directory/music-directory.module.ts","src/app/modules/music-directory/services/genre.service.ts","src/app/modules/music-directory/services/music-list.service.ts","src/app/shared/pipes/generate-dash.pipe.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<form autocomplete = \\\"off\\\" class=\\\"example-container\\\" #profileForm = \\\"ngForm\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Title\\\" name = \\\"title\\\" [(ngModel)] = \\\"songData.title\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n                <input matInput placeholder=\\\"Album\\\" name = \\\"album\\\"  [(ngModel)] = \\\"songData.album\\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n                <input matInput placeholder=\\\"Year\\\" name = \\\"year\\\" [(ngModel)] = \\\"songData.year\\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n                <input matInput placeholder=\\\"Artist\\\" name = \\\"artist\\\" [(ngModel)] = \\\"songData.artist\\\" required>\\n        </mat-form-field>\\n        <mat-form-field>\\n                <input matInput placeholder=\\\"Cover URL\\\" name = \\\"url\\\" [(ngModel)] = \\\"songData.coverUrl\\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n            <mat-label>Genre</mat-label>\\n            <mat-select name = \\\"genre\\\" [(ngModel)] = \\\"songData.genre\\\" required>\\n                <mat-option *ngFor=\\\"let genre of genreList\\\" [value]=\\\"genre\\\" >\\n                {{genre}}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n        <button mat-stroked-button color=\\\"primary\\\" [disabled] = \\\"profileForm.invalid\\\" (click) = \\\"onSave()\\\" class =\\\"save-button\\\"> Save </button>\\n</form>\\n\"","export default \"<mat-nav-list>\\n        <mat-list-item *ngFor=\\\"let genre of genreList\\\" (click) = \\\"genreClicked(genre)\\\">\\n            {{genre}}\\n        </mat-list-item>\\n</mat-nav-list>\"","export default \"<mat-sidenav-container class = \\\"full-height\\\">\\n    <mat-sidenav mode = \\\"side\\\" opened>\\n        <div>\\n            <left-side-bar></left-side-bar>\\n        </div>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n        <div>\\n            <music-list></music-list>\\n        </div>\\n    </mat-sidenav-content>\\n\\n</mat-sidenav-container>\\n\\n<!-- <mat-drawer-container class=\\\"example-container\\\" autosize>\\n    <mat-drawer #drawer class=\\\"example-sidenav\\\" mode=\\\"side\\\">\\n      <p>Auto-resizing sidenav</p>\\n      <p *ngIf=\\\"showFiller\\\">Lorem, ipsum dolor sit amet consectetur.</p>\\n      <mat-progress-bar mode=\\\"query\\\" *ngIf=\\\"showFiller\\\"></mat-progress-bar>\\n\\n      <button (click)=\\\"showFiller = !showFiller\\\" mat-raised-button>\\n        Toggle extra text\\n      </button>\\n    </mat-drawer>\\n  \\n    <div class=\\\"example-sidenav-content\\\">\\n      <button type=\\\"button\\\" mat-button (click)=\\\"drawer.toggle()\\\">\\n        Toggle sidenav\\n      </button>\\n    </div>\\n  \\n  </mat-drawer-container> -->\"","export default \"<div>\\n    <div>\\n        <mat-grid-list cols = \\\"5\\\" rowHeight=\\\"300px\\\" class = \\\"grid-list\\\">\\n            <mat-grid-tile *ngFor = \\\"let song of songList\\\" class = \\\"grid-tile\\\" >\\n                <mat-card class = \\\"song-card\\\" >\\n                    <div class = \\\"delete-icon\\\">\\n                        <mat-icon aria-hidden=\\\"false\\\" (click) = \\\"deleteSong(song)\\\">delete</mat-icon>\\n                    </div>\\n                    <mat-card-content class = \\\"card-content\\\" >\\n                        <div class= \\\"image-section\\\">\\n                            <img defaultCoverUrl src = {{song.coverUrl}} alt=\\\"\\\">\\n                        </div>\\n                        <mat-divider></mat-divider>\\n                        <div class = \\\"details-section\\\">\\n                            <div class = \\\"title\\\">{{song.title}}</div>\\n                            <div class = \\\"artist\\\">{{song.artist}}</div>\\n                        </div>\\n                    </mat-card-content>\\n                    <mat-card-content class = \\\"hidden-card\\\" >\\n                        <div class=\\\"hidden-card-form\\\">\\n                        <form autocomplete = \\\"off\\\"  #profileForm = \\\"ngForm\\\">\\n                                <mat-form-field appearance=\\\"standard\\\" class = \\\"form-field\\\">\\n                                        <input matInput placeholder=\\\"Title\\\" name = \\\"title\\\" [(ngModel)] = \\\"song.title\\\" required>\\n                                      </mat-form-field>\\n                                      <mat-form-field appearance=\\\"standard\\\" class = \\\"form-field\\\">\\n                                              <input matInput placeholder=\\\"Album\\\" name = \\\"album\\\"  [(ngModel)] = \\\"song.album\\\">\\n                                      </mat-form-field>\\n                                      <mat-form-field appearance=\\\"standard\\\" class = \\\"form-field\\\">\\n                                              <input matInput placeholder=\\\"Year\\\" name = \\\"year\\\" [(ngModel)] = \\\"song.year\\\">\\n                                      </mat-form-field>\\n                                      <mat-form-field appearance=\\\"standard\\\" class = \\\"form-field\\\">\\n                                              <input matInput placeholder=\\\"Artist\\\" name = \\\"artist\\\" [(ngModel)] = \\\"song.artist\\\" required>\\n                                      </mat-form-field>\\n                    \\n                                      <mat-form-field appearance=\\\"standard\\\" class = \\\"form-field\\\">\\n                                          <mat-select name = \\\"genre\\\" [(ngModel)] = \\\"song.genre\\\" required>\\n                                              <mat-option *ngFor=\\\"let genre of genreList\\\" [value]=\\\"genre\\\" >\\n                                              {{genre}}\\n                                              </mat-option>\\n                                          </mat-select>\\n                                      </mat-form-field>\\n                                      <button mat-icon-button [disabled] = \\\"profileForm.invalid || !profileForm.dirty\\\" (click) = \\\"update(song)\\\" class = \\\"update-button\\\"> \\n                                            <mat-icon>update</mat-icon>\\n                                        </button>\\n                        </form>\\n                    </div>\\n                    </mat-card-content>\\n                </mat-card>\\n                \\n            </mat-grid-tile>\\n        </mat-grid-list>\\n    </div>\\n    <div class = \\\"add-button\\\">\\n    <button mat-fab color=\\\"primary\\\" (click) = \\\"openDialog()\\\" class = \\\"button-add\\\"> \\n        <mat-icon>add</mat-icon>\\n    </button>\\n    </div>\\n\\n</div>\\n\"","export default \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  width: 500px;\\n}\\n.example-container .save-button {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  width: 30px;\\n  margin-left: 45%;\\n}\\n/*# sourceMappingURL=projects/musicApp/src/app/modules/music-directory/components/add-dialog/add-dialog.component.css.map */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9hZGQtZGlhbG9nL3Byb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9hZGQtZGlhbG9nL2FkZC1kaWFsb2cuY29tcG9uZW50LnN0eWwiLCJwcm9qZWN0cy9tdXNpY0FwcC9zcmMvYXBwL21vZHVsZXMvbXVzaWMtZGlyZWN0b3J5L2NvbXBvbmVudHMvYWRkLWRpYWxvZy9hZGQtZGlhbG9nLmNvbXBvbmVudC5zdHlsIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBUTtFQUNSLHNCQUFlO0VBQ2YsWUFBTTtBQ0NWO0FEQUk7RUFDSSxhQUFRO0VBQ1Isc0JBQWU7RUFDZixtQkFBWTtFQUNaLHVCQUFnQjtFQUNoQixXQUFNO0VBQ04sZ0JBQVk7QUNFcEI7QUFDQSwySEFBMkgiLCJmaWxlIjoicHJvamVjdHMvbXVzaWNBcHAvc3JjL2FwcC9tb2R1bGVzL211c2ljLWRpcmVjdG9yeS9jb21wb25lbnRzL2FkZC1kaWFsb2cvYWRkLWRpYWxvZy5jb21wb25lbnQuc3R5bCIsInNvdXJjZXNDb250ZW50IjpbIi5leGFtcGxlLWNvbnRhaW5lciBcbiAgICBkaXNwbGF5IGZsZXhcbiAgICBmbGV4LWRpcmVjdGlvbiBjb2x1bW5cbiAgICB3aWR0aCA1MDBweFxuICAgIC5zYXZlLWJ1dHRvblxuICAgICAgICBkaXNwbGF5IGZsZXhcbiAgICAgICAgZmxleC1kaXJlY3Rpb24gY29sdW1uXG4gICAgICAgIGFsaWduLWl0ZW1zIGNlbnRlclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQgY2VudGVyXG4gICAgICAgIHdpZHRoIDMwcHhcbiAgICAgICAgbWFyZ2luLWxlZnQgNDUlXG5cblxuIiwiLmV4YW1wbGUtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgd2lkdGg6IDUwMHB4O1xufVxuLmV4YW1wbGUtY29udGFpbmVyIC5zYXZlLWJ1dHRvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMzBweDtcbiAgbWFyZ2luLWxlZnQ6IDQ1JTtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPXByb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9hZGQtZGlhbG9nL2FkZC1kaWFsb2cuY29tcG9uZW50LmNzcy5tYXAgKi8iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { GenreService } from '../../services/genre.service';\nimport { MusicListService } from '../../services/music-list.service';\nimport { SongModel } from 'projects/musicApp/src/app/models/song.model';\nimport { MatDialogRef } from '@angular/material';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n\n@Component({\n  selector: 'add-dialog',\n  templateUrl: './add-dialog.component.html',\n  styleUrls: ['./add-dialog.component.styl']\n})\nexport class AddDialogComponent implements OnInit {\n  /******* Constructor */\n  constructor(\n    private genreService: GenreService,\n    private musicService: MusicListService,\n    private matDialogRef:MatDialogRef<AddDialogComponent>,\n    private _matSnackBar: MatSnackBar\n  ) { }\n  /************* Properties */\n  public genreList = []\n  public songData:SongModel = {\n    title:\"\",\n    album:\"\",\n    year:null,\n    artist:\"\",\n    coverUrl:\"\",\n    genre:\"\",\n    id:\"\"\n  }\n\n\n  /************* Method */\n  ngOnInit() {\n    this.genreList = this.genreService.getGenreList()\n  }\n\n  public onSave(){\n    this.musicService.addSong(this.songData)\n    this._matSnackBar.open(this.songData['title'], \"\", {\n      duration: 1000,\n    })\n    this.matDialogRef.close(true);\n  }\n\n}\n","export default \".mat-nav-list {\\n  margin-top: 70px;\\n}\\n/*# sourceMappingURL=projects/musicApp/src/app/modules/music-directory/components/left-side-bar/left-side-bar.component.css.map */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9sZWZ0LXNpZGUtYmFyL3Byb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9sZWZ0LXNpZGUtYmFyL2xlZnQtc2lkZS1iYXIuY29tcG9uZW50LnN0eWwiLCJwcm9qZWN0cy9tdXNpY0FwcC9zcmMvYXBwL21vZHVsZXMvbXVzaWMtZGlyZWN0b3J5L2NvbXBvbmVudHMvbGVmdC1zaWRlLWJhci9sZWZ0LXNpZGUtYmFyLmNvbXBvbmVudC5zdHlsIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZ0JBQVc7QUNDZjtBQUNBLGlJQUFpSSIsImZpbGUiOiJwcm9qZWN0cy9tdXNpY0FwcC9zcmMvYXBwL21vZHVsZXMvbXVzaWMtZGlyZWN0b3J5L2NvbXBvbmVudHMvbGVmdC1zaWRlLWJhci9sZWZ0LXNpZGUtYmFyLmNvbXBvbmVudC5zdHlsIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1uYXYtbGlzdCBcbiAgICBtYXJnaW4tdG9wIDcwcHgiLCIubWF0LW5hdi1saXN0IHtcbiAgbWFyZ2luLXRvcDogNzBweDtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPXByb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9sZWZ0LXNpZGUtYmFyL2xlZnQtc2lkZS1iYXIuY29tcG9uZW50LmNzcy5tYXAgKi8iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { GenreService } from '../../services/genre.service';\nimport { MusicListService } from '../../services/music-list.service';\nimport { GenreModel } from 'projects/musicApp/src/app/models/genre.models';\nimport { SongModel } from 'projects/musicApp/src/app/models/song.model';\n\n@Component({\n  selector: 'left-side-bar',\n  templateUrl: './left-side-bar.component.html',\n  styleUrls: ['./left-side-bar.component.styl']\n})\nexport class LeftSideBarComponent implements OnInit {\n  /***************************** Constructor **************************/\n  constructor(\n    private genreService : GenreService,\n    private musicService : MusicListService\n  ) { }\n  /***************************** Properties **************************/\n\n    public genreList: GenreModel[] = [];\n    public songsList: SongModel[] = [];\n\n  /***************************** Methods **************************/\n\n  ngOnInit() {\n    this.genreList = this.genreService.getGenreList();\n    this.songsList  = this.musicService.getSongsList();\n  }\n\n  public genreClicked(genre) {\n    this.musicService.emitNewGenre(genre);\n  }\n\n}\n","export default \".example-container {\\n  height: 100%;\\n  border: 1px solid rgba(0,0,0,0.5);\\n}\\n.example-sidenav-content {\\n  display: flex;\\n  height: 100%;\\n  align-items: center;\\n  justify-content: center;\\n}\\n.example-sidenav {\\n  padding: 20px;\\n}\\n.full-height {\\n  height: 100%;\\n}\\n/*# sourceMappingURL=projects/musicApp/src/app/modules/music-directory/components/music-directory-container/music-directory-container.component.css.map */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9tdXNpYy1kaXJlY3RvcnktY29udGFpbmVyL3Byb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9tdXNpYy1kaXJlY3RvcnktY29udGFpbmVyL211c2ljLWRpcmVjdG9yeS1jb250YWluZXIuY29tcG9uZW50LnN0eWwiLCJwcm9qZWN0cy9tdXNpY0FwcC9zcmMvYXBwL21vZHVsZXMvbXVzaWMtZGlyZWN0b3J5L2NvbXBvbmVudHMvbXVzaWMtZGlyZWN0b3J5LWNvbnRhaW5lci9tdXNpYy1kaXJlY3RvcnktY29udGFpbmVyLmNvbXBvbmVudC5zdHlsIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBUTtFQUNSLGlDQUFRO0FDQ1Y7QURFQTtFQUNFLGFBQVM7RUFDVCxZQUFRO0VBQ1IsbUJBQWE7RUFDYix1QkFBaUI7QUNBbkI7QURHQTtFQUNFLGFBQVM7QUNEWDtBRElBO0VBQ0UsWUFBUztBQ0ZYO0FBQ0EseUpBQXlKIiwiZmlsZSI6InByb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9tdXNpYy1kaXJlY3RvcnktY29udGFpbmVyL211c2ljLWRpcmVjdG9yeS1jb250YWluZXIuY29tcG9uZW50LnN0eWwiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1jb250YWluZXIge1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC41KTtcbn1cblxuLmV4YW1wbGUtc2lkZW5hdi1jb250ZW50IHtcbiAgZGlzcGxheTogZmxleDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLmV4YW1wbGUtc2lkZW5hdiB7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG5cbi5mdWxsLWhlaWdodCB7XG4gIGhlaWdodCA6IDEwMCU7XG59IiwiLmV4YW1wbGUtY29udGFpbmVyIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsMCwwLDAuNSk7XG59XG4uZXhhbXBsZS1zaWRlbmF2LWNvbnRlbnQge1xuICBkaXNwbGF5OiBmbGV4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLmV4YW1wbGUtc2lkZW5hdiB7XG4gIHBhZGRpbmc6IDIwcHg7XG59XG4uZnVsbC1oZWlnaHQge1xuICBoZWlnaHQ6IDEwMCU7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1wcm9qZWN0cy9tdXNpY0FwcC9zcmMvYXBwL21vZHVsZXMvbXVzaWMtZGlyZWN0b3J5L2NvbXBvbmVudHMvbXVzaWMtZGlyZWN0b3J5LWNvbnRhaW5lci9tdXNpYy1kaXJlY3RvcnktY29udGFpbmVyLmNvbXBvbmVudC5jc3MubWFwICovIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'music-directory-container',\n  templateUrl: './music-directory-container.component.html',\n  styleUrls: ['./music-directory-container.component.styl']\n})\nexport class MusicDirectoryContainerComponent implements OnInit {\n\n  showFiller = false;\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n\n}\n","export default \".add-button {\\n  right: 1px;\\n  transition: all 2s ease-in-out;\\n  padding: 20px 20px;\\n  position: absolute;\\n}\\n.delete-icon {\\n  display: none;\\n}\\n.hidden-card {\\n  visibility: hidden;\\n}\\n.song-card:hover .hidden-card {\\n  visibility: visible;\\n}\\n.song-card:hover .card-content {\\n  display: none;\\n}\\n.form-field {\\n  width: 150px;\\n  height: 15px;\\n}\\n.update-icon {\\n  position: absolute;\\n  display: flex;\\n  margin-left: 40px;\\n  cursor: pointer;\\n}\\n.grid-tile:hover .delete-icon {\\n  display: inline-block;\\n  position: absolute;\\n  right: 1px;\\n  top: 3px;\\n  margin-right: 7px;\\n  cursor: pointer;\\n}\\n.grid-list {\\n  margin-top: 70px;\\n}\\n.song-card {\\n  width: 200px;\\n  height: 240px;\\n  padding: 16px 8px;\\n  display: flex;\\n  flex-direction: column;\\n  margin-top: 20px;\\n  margin-left: 20px;\\n}\\n.song-card .card-content {\\n  flex: 1;\\n}\\n.song-card .card-content .image-section {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  margin-bottom: 16px;\\n}\\n.song-card .card-content .image-section img {\\n  height: 175px;\\n  width: 175px;\\n  border-radius: 50%;\\n}\\n.song-card .card-content .details-section {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: left;\\n  text-align: center;\\n  justify-content: center;\\n  margin-top: 16px;\\n}\\n.song-card .card-content .details-section .title {\\n  font-size: 1.25em;\\n  font-family: Tahoma;\\n}\\n.song-card .card-content .details-section .artist {\\n  margin-top: 5px;\\n  font-size: 1em;\\n  font-family: Andale Mono;\\n}\\n/*# sourceMappingURL=projects/musicApp/src/app/modules/music-directory/components/music-list/music-list.component.css.map */\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9tdXNpYy1saXN0L3Byb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9tdXNpYy1saXN0L211c2ljLWxpc3QuY29tcG9uZW50LnN0eWwiLCJwcm9qZWN0cy9tdXNpY0FwcC9zcmMvYXBwL21vZHVsZXMvbXVzaWMtZGlyZWN0b3J5L2NvbXBvbmVudHMvbXVzaWMtbGlzdC9tdXNpYy1saXN0LmNvbXBvbmVudC5zdHlsIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksVUFBTTtFQUVOLDhCQUFXO0VBQ1gsa0JBQVE7RUFDUixrQkFBUztBQ0NiO0FEQ0E7RUFDSSxhQUFRO0FDQ1o7QURDQTtFQUNJLGtCQUFXO0FDQ2Y7QURFSTtFQUNJLG1CQUFXO0FDQW5CO0FERUk7RUFDSSxhQUFRO0FDQWhCO0FERUE7RUFDSSxZQUFNO0VBQ04sWUFBTztBQ0FYO0FERUE7RUFDSSxrQkFBUztFQUNULGFBQVE7RUFDUixpQkFBWTtFQUNaLGVBQU87QUNBWDtBREVBO0VBQ0kscUJBQVE7RUFDUixrQkFBUztFQUNULFVBQU07RUFDTixRQUFJO0VBQ0osaUJBQWE7RUFDYixlQUFPO0FDQVg7QURFQTtFQUNJLGdCQUFXO0FDQWY7QURFQTtFQUNJLFlBQU07RUFDTixhQUFPO0VBQ1AsaUJBQVE7RUFDUixhQUFRO0VBQ1Isc0JBQWU7RUFDZixnQkFBWTtFQUNaLGlCQUFZO0FDQWhCO0FERUk7RUFDSSxPQUFLO0FDQWI7QURDUTtFQUNJLGFBQVE7RUFDUixzQkFBZTtFQUNmLG1CQUFZO0VBQ1osdUJBQWdCO0VBQ2hCLG1CQUFjO0FDQzFCO0FEQVk7RUFDSSxhQUFPO0VBQ1AsWUFBTTtFQUNOLGtCQUFjO0FDRTlCO0FERFE7RUFDSSxhQUFRO0VBQ1Isc0JBQWU7RUFDZixpQkFBYTtFQUNiLGtCQUFXO0VBQ1gsdUJBQWdCO0VBQ2hCLGdCQUFXO0FDR3ZCO0FERlk7RUFDSSxpQkFBVTtFQUNWLG1CQUFZO0FDSTVCO0FESFk7RUFDSSxlQUFXO0VBQ1gsY0FBVztFQUNYLHdCQUFZO0FDSzVCO0FBQ0EsMkhBQTJIIiwiZmlsZSI6InByb2plY3RzL211c2ljQXBwL3NyYy9hcHAvbW9kdWxlcy9tdXNpYy1kaXJlY3RvcnkvY29tcG9uZW50cy9tdXNpYy1saXN0L211c2ljLWxpc3QuY29tcG9uZW50LnN0eWwiLCJzb3VyY2VzQ29udGVudCI6WyIuYWRkLWJ1dHRvblxuICAgIHJpZ2h0IDFweFxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDJzIGVhc2UtaW4tb3V0XG4gICAgdHJhbnNpdGlvbiBhbGwgMnMgZWFzZS1pbi1vdXRcbiAgICBwYWRkaW5nIDIwcHggMjBweFxuICAgIHBvc2l0aW9uIGFic29sdXRlXG5cbi5kZWxldGUtaWNvblxuICAgIGRpc3BsYXkgbm9uZVxuXG4uaGlkZGVuLWNhcmQgICAgXG4gICAgdmlzaWJpbGl0eSBoaWRkZW4gXG5cbi5zb25nLWNhcmQ6aG92ZXIgXG4gICAgLmhpZGRlbi1jYXJkXG4gICAgICAgIHZpc2liaWxpdHkgdmlzaWJsZVxuICAgICAgIFxuICAgIC5jYXJkLWNvbnRlbnRcbiAgICAgICAgZGlzcGxheSBub25lXG5cbi5mb3JtLWZpZWxkXG4gICAgd2lkdGggMTUwcHhcbiAgICBoZWlnaHQgMTVweFxuXG4udXBkYXRlLWljb25cbiAgICBwb3NpdGlvbiBhYnNvbHV0ZVxuICAgIGRpc3BsYXkgZmxleFxuICAgIG1hcmdpbi1sZWZ0IDQwcHhcbiAgICBjdXJzb3IgcG9pbnRlclxuXG4uZ3JpZC10aWxlOmhvdmVyIC5kZWxldGUtaWNvblxuICAgIGRpc3BsYXkgaW5saW5lLWJsb2NrXG4gICAgcG9zaXRpb24gYWJzb2x1dGVcbiAgICByaWdodCAxcHhcbiAgICB0b3AgM3B4XG4gICAgbWFyZ2luLXJpZ2h0IDdweFxuICAgIGN1cnNvciBwb2ludGVyXG5cbi5ncmlkLWxpc3RcbiAgICBtYXJnaW4tdG9wIDcwcHhcblxuLnNvbmctY2FyZFxuICAgIHdpZHRoIDIwMHB4XG4gICAgaGVpZ2h0IDI0MHB4XG4gICAgcGFkZGluZyAxNnB4IDhweFxuICAgIGRpc3BsYXkgZmxleCBcbiAgICBmbGV4LWRpcmVjdGlvbiBjb2x1bW5cbiAgICBtYXJnaW4tdG9wICAyMHB4XG4gICAgbWFyZ2luLWxlZnQgMjBweFxuXG4gICAgLmNhcmQtY29udGVudFxuICAgICAgICBmbGV4IDFcbiAgICAgICAgLmltYWdlLXNlY3Rpb25cbiAgICAgICAgICAgIGRpc3BsYXkgZmxleFxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb24gY29sdW1uXG4gICAgICAgICAgICBhbGlnbi1pdGVtcyBjZW50ZXIgXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQgY2VudGVyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tIDE2cHhcbiAgICAgICAgICAgIGltZ1xuICAgICAgICAgICAgICAgIGhlaWdodCAxNzVweFxuICAgICAgICAgICAgICAgIHdpZHRoIDE3NXB4XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1cyA1MCVcbiAgICAgICAgLmRldGFpbHMtc2VjdGlvblxuICAgICAgICAgICAgZGlzcGxheSBmbGV4XG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbiBjb2x1bW5cbiAgICAgICAgICAgIGFsaWduLWl0ZW1zICBsZWZ0XG4gICAgICAgICAgICB0ZXh0LWFsaWduIGNlbnRlclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50IGNlbnRlclxuICAgICAgICAgICAgbWFyZ2luLXRvcCAxNnB4XG4gICAgICAgICAgICAudGl0bGVcbiAgICAgICAgICAgICAgICBmb250LXNpemUgMS4yNWVtXG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHkgVGFob21hXG4gICAgICAgICAgICAuYXJ0aXN0XG4gICAgICAgICAgICAgICAgbWFyZ2luLXRvcCA1cHhcbiAgICAgICAgICAgICAgICBmb250LXNpemUgIDFlbVxuICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5IEFuZGFsZSBNb25vXG4iLCIuYWRkLWJ1dHRvbiB7XG4gIHJpZ2h0OiAxcHg7XG4gIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDJzIGVhc2UtaW4tb3V0O1xuICB0cmFuc2l0aW9uOiBhbGwgMnMgZWFzZS1pbi1vdXQ7XG4gIHBhZGRpbmc6IDIwcHggMjBweDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xufVxuLmRlbGV0ZS1pY29uIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbi5oaWRkZW4tY2FyZCB7XG4gIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cbi5zb25nLWNhcmQ6aG92ZXIgLmhpZGRlbi1jYXJkIHtcbiAgdmlzaWJpbGl0eTogdmlzaWJsZTtcbn1cbi5zb25nLWNhcmQ6aG92ZXIgLmNhcmQtY29udGVudCB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG4uZm9ybS1maWVsZCB7XG4gIHdpZHRoOiAxNTBweDtcbiAgaGVpZ2h0OiAxNXB4O1xufVxuLnVwZGF0ZS1pY29uIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW4tbGVmdDogNDBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmdyaWQtdGlsZTpob3ZlciAuZGVsZXRlLWljb24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDFweDtcbiAgdG9wOiAzcHg7XG4gIG1hcmdpbi1yaWdodDogN3B4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4uZ3JpZC1saXN0IHtcbiAgbWFyZ2luLXRvcDogNzBweDtcbn1cbi5zb25nLWNhcmQge1xuICB3aWR0aDogMjAwcHg7XG4gIGhlaWdodDogMjQwcHg7XG4gIHBhZGRpbmc6IDE2cHggOHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXJnaW4tbGVmdDogMjBweDtcbn1cbi5zb25nLWNhcmQgLmNhcmQtY29udGVudCB7XG4gIGZsZXg6IDE7XG59XG4uc29uZy1jYXJkIC5jYXJkLWNvbnRlbnQgLmltYWdlLXNlY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbn1cbi5zb25nLWNhcmQgLmNhcmQtY29udGVudCAuaW1hZ2Utc2VjdGlvbiBpbWcge1xuICBoZWlnaHQ6IDE3NXB4O1xuICB3aWR0aDogMTc1cHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cbi5zb25nLWNhcmQgLmNhcmQtY29udGVudCAuZGV0YWlscy1zZWN0aW9uIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGxlZnQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDE2cHg7XG59XG4uc29uZy1jYXJkIC5jYXJkLWNvbnRlbnQgLmRldGFpbHMtc2VjdGlvbiAudGl0bGUge1xuICBmb250LXNpemU6IDEuMjVlbTtcbiAgZm9udC1mYW1pbHk6IFRhaG9tYTtcbn1cbi5zb25nLWNhcmQgLmNhcmQtY29udGVudCAuZGV0YWlscy1zZWN0aW9uIC5hcnRpc3Qge1xuICBtYXJnaW4tdG9wOiA1cHg7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBmb250LWZhbWlseTogQW5kYWxlIE1vbm87XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1wcm9qZWN0cy9tdXNpY0FwcC9zcmMvYXBwL21vZHVsZXMvbXVzaWMtZGlyZWN0b3J5L2NvbXBvbmVudHMvbXVzaWMtbGlzdC9tdXNpYy1saXN0LmNvbXBvbmVudC5jc3MubWFwICovIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { MusicListService } from '../../services/music-list.service';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { AddDialogComponent } from '../add-dialog/add-dialog.component';\nimport { GenreService } from '../../services/genre.service';\n\n@Component({\n  selector: 'music-list',\n  templateUrl: './music-list.component.html',\n  styleUrls: ['./music-list.component.styl']\n})\nexport class MusicListComponent implements OnInit {\n\n  /***************************** Constructor **************************/\n\n  constructor(\n    private musicListService: MusicListService,\n    public dialog: MatDialog,\n    private genreService: GenreService\n  ) { }\n\n  /***************************** Properties **************************/\n  public songList = []\n  public showCard = false\n  public genreList = []\n  /***************************** Methods **************************/\n\n  ngOnInit() {\n    this.songList = this.musicListService.getSongsList()\n    this.setUpdateListener();\n    this.genreList = this.genreService.getGenreList()\n\n  }\n \n \n  private setUpdateListener(){\n    this.musicListService.checkGenreChanged().subscribe((genre)=>{\n      this.songList = this.musicListService.getGenreSongsList(genre)\n    })\n  }\n\n  public openDialog() {\n    let matDialogRef:MatDialogRef<AddDialogComponent> = this.dialog.open(AddDialogComponent)\n    matDialogRef.afterClosed().subscribe((data)=>{\n      if(data){\n        this.songList = this.musicListService.getSongsList()\n      }\n      console.log('dialog closed',data);\n    })\n  }\n\n  public deleteSong(song){\n    console.log(song)\n    this.songList = this.musicListService.deleteSong(song['id'],this.songList)\n  }\n  \n  public update(song){\n    console.log(song)\n    this.songList = this.musicListService.updateSong(song,this.songList)\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MusicDirectoryContainerComponent } from './components/music-directory-container/music-directory-container.component';\n\n\nconst routes: Routes = [\n  {path:'', component: MusicDirectoryContainerComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MusicDirectoryRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from './../material/material.module'\n\nimport { MusicDirectoryRoutingModule } from './music-directory-routing.module';\nimport { MusicDirectoryContainerComponent } from './components/music-directory-container/music-directory-container.component';\nimport { LeftSideBarComponent } from './components/left-side-bar/left-side-bar.component';\nimport { MusicListComponent } from './components/music-list/music-list.component';\nimport { GenerateDashPipe } from '../../shared/pipes/generate-dash.pipe';\nimport { SharedModule } from '../../shared/shared.module';\nimport { AddDialogComponent } from './components/add-dialog/add-dialog.component';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [MusicDirectoryContainerComponent, LeftSideBarComponent, MusicListComponent,GenerateDashPipe, AddDialogComponent],\n  imports: [\n    CommonModule,\n    MusicDirectoryRoutingModule,\n    MaterialModule,\n    SharedModule,\n    FormsModule\n  ],\n  entryComponents:[AddDialogComponent]\n})\nexport class MusicDirectoryModule { }\n","import { Injectable } from '@angular/core';\nimport { GenreModel } from '../../../models/genre.models';\nimport _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenreService {\n  /***************************** Constructor **************************/\n  constructor() { }\n  /***************************** Properties **************************/\n  private genreList: GenreModel[] = ['All','Bollywood','Classical','IndiPop','Hollywood','Punjabi']\n\n\n  /***************************** Methods **************************/\n  public getGenreList(): GenreModel[] {\n    return _.cloneDeep(this.genreList)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport _ from 'lodash';\nimport { SongModel } from '../../../models/song.model';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicListService {\n  /***************************** Constructor **************************/\n  constructor() { }\n  /***************************** Properties **************************/\n  private songList: SongModel[] = [\n    {\n    title : \"Hud Hud\",\n    album: \"Dabangg 3\",\n    year: 2019,\n    artist: \"Shabab Sabri, Divya Kumar, Sajid\",\n    id: \"1\",\n    coverUrl: \"https://c.saavncdn.com/019/Dabangg-3-Hindi-2019-20191119135116-500x500.jpg\",\n    genre: \"Bollywood\"\n  },\n  {\n    title : \"O Saki Saki\",\n    album: \"Batla House\",\n    year: 2019,\n    artist: \"Tulsi Kumar, Neha Kakkar, B Praak\",\n    id: \"2\",\n    coverUrl: \"https://c.saavncdn.com/810/O-Saki-Saki-From-Batla-House--Hindi-2019-20190715121320-500x500.jpg\",\n    genre: \"Bollywood\"\n\n  },\n  {\n    title : \"Muqabla\",\n    album: \"Street Dancer 3D\",\n    year: 2019,\n    artist: \"Parampara Thakur, Yash Narvekar\",\n    id: \"3\",\n    coverUrl: \"https://c.saavncdn.com/597/Muqabla-From-Street-Dancer-3D-Hindi-2019-20191226110928-500x500.jpg\",\n    genre: \"Bollywood\"\n\n  },\n  {\n    title : \"Oh Ho Ho Ho\",\n    album: \"Ishq Tera Tadpave\",\n    year: 2018,\n    artist: \"Sukhbir\",\n    id: \"4\",\n    coverUrl: \"https://c.saavncdn.com/447/Ishq-Tera-Tadpave-Oh-Ho-Ho-Ho--Punjabi-2018-20180515080525-500x500.jpg\",\n    genre: \"Punjabi\"\n\n  },\n  {\n    title : \"Oh Ho Ho Ho\",\n    album: \"Ishq Tera Tadpave\",\n    year: 2018,\n    artist: \"Sukhbir\",\n    id: \"5\",\n    coverUrl: \"https://c.saavncdn.com/447/Ishq-Tera-Tadpave-Oh-Ho-Ho-Ho--Punjabi-2018-20180515080525-500x500.jpg\",\n    genre: \"Punjabi\"\n\n  },\n  {\n    title : \"Oh Ho Ho Ho\",\n    album: \"Ishq Tera Tadpave\",\n    year: 2018,\n    artist: \"Sukhbir\",\n    id: \"6\",\n    coverUrl: \"https://c.saavncdn.com/447/Ishq-Tera-Tadpave-Oh-Ho-Ho-Ho--Punjabi-2018-20180515080525-500x500.jpg\",\n    genre: \"Punjabi\"\n\n  },\n  {\n    title : \"Oh Ho Ho Ho\",\n    album: \"Ishq Tera Tadpave\",\n    year: 2018,\n    artist: \"Sukhbir\",\n    id: \"7\",\n    coverUrl: \"https://c.saavncdn.com/447/Ishq-Tera-Tadpave-Oh-Ho-Ho-Ho--Punjabi-2018-20180515080525-500x500.jpg\",\n    genre: \"Punjabi\"\n\n  }\n\n]\n  private genreChangeSubject = new Subject<string>()\n  /***************************** Methods **************************/\n  \n  public getSongsList() {\n    return _.cloneDeep(this.songList)\n  }\n\n  public getGenreSongsList(genre) {\n    let songs = _.cloneDeep(this.songList)\n    if (genre == \"All\") {\n      return songs\n    }\n\n    let returnList = []\n    for (let a_song in songs) {\n      if (songs[a_song][\"genre\"] == genre){\n        returnList.push(songs[a_song])\n      }\n    }\n    return returnList\n  }\n\n  checkGenreChanged(){\n    return this.genreChangeSubject.asObservable();\n  }\n  emitNewGenre(genre){\n    this.genreChangeSubject.next(genre);\n  }\n\n  addSong(songData:SongModel){\n    songData['id'] = (this.songList.length + 1).toString()\n    this.songList.push(songData)\n  }\n\n  deleteSong(id,songs){\n    console.log(id)\n    console.log(songs)\n    this.songList.splice(id-1,1)\n    for (let a_song in songs){\n      if (songs[a_song]['id'] == id) {\n          songs.splice(a_song,1)\n      }\n    }\n    return songs\n  }\n\n  updateSong(song, songs){\n    for (let a_song in songs){\n      if (songs[a_song]['id'] == song['id']){\n        songs[a_song] = song\n      }\n    }\n\n    for (let a_song in this.songList){\n      if (this.songList[a_song]['id'] == song['id']){\n        this.songList[a_song] = song\n      }\n    }\n\n    return songs\n  }\n\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'generateDash'\n})\nexport class GenerateDashPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    if (value){\n      return value\n    }\n    else{\n      return \"-------\"\n    }\n  }\n\n}\n"],"sourceRoot":"webpack:///"}